#!/usr/bin/env python3
"""
Script para configura√ß√£o inicial do Dropbox
Execute este script uma vez para obter refresh token
"""

import dropbox
import webbrowser
import os
from dotenv import load_dotenv

def setup_dropbox():
    """Configura√ß√£o inicial do Dropbox"""
    load_dotenv()
    
    APP_KEY = input("Digite sua App Key do Dropbox: ").strip()
    APP_SECRET = input("Digite sua App Secret do Dropbox: ").strip()
    
    if not APP_KEY or not APP_SECRET:
        print("‚ùå App Key e App Secret s√£o obrigat√≥rios!")
        return
    
    try:
        # Iniciar fluxo OAuth2
        auth_flow = dropbox.DropboxOAuth2FlowNoRedirect(APP_KEY, APP_SECRET)
        authorize_url = auth_flow.start()
        
        print("\n" + "="*60)
        print("üîó AUTORIZA√á√ÉO NECESS√ÅRIA")
        print("="*60)
        print(f"1. Abra este link no seu navegador:")
        print(f"   {authorize_url}")
        print("\n2. Fa√ßa login na sua conta Dropbox")
        print("3. Clique em 'Allow' para autorizar a aplica√ß√£o")
        print("4. Copie o c√≥digo de autoriza√ß√£o que aparecer√°")
        print("="*60)
        
        # Abrir automaticamente no navegador
        try:
            webbrowser.open(authorize_url)
            print("‚úÖ Link aberto automaticamente no navegador")
        except:
            print("‚ö†Ô∏è  N√£o foi poss√≠vel abrir automaticamente. Copie o link acima.")
        
        print("\n")
        auth_code = input("üìã Cole o c√≥digo de autoriza√ß√£o aqui: ").strip()
        
        if not auth_code:
            print("‚ùå C√≥digo de autoriza√ß√£o n√£o fornecido!")
            return
        
        # Finalizar autoriza√ß√£o
        oauth_result = auth_flow.finish(auth_code)
        
        print("\n" + "="*60)
        print("‚úÖ CONFIGURA√á√ÉO CONCLU√çDA COM SUCESSO!")
        print("="*60)
        print("üìù Adicione estas vari√°veis ao seu arquivo .env:")
        print("")
        print(f"DROPBOX_APP_KEY={APP_KEY}")
        print(f"DROPBOX_APP_SECRET={APP_SECRET}")
        print(f"DROPBOX_ACCESS_TOKEN={oauth_result.access_token}")
        print(f"DROPBOX_REFRESH_TOKEN={oauth_result.refresh_token}")
        print("")
        print("üí° IMPORTANTE:")
        print("   ‚Ä¢ O REFRESH_TOKEN n√£o expira - guarde-o com seguran√ßa!")
        print("   ‚Ä¢ O ACCESS_TOKEN ser√° renovado automaticamente")
        print("   ‚Ä¢ Para Streamlit Cloud, adicione tamb√©m ao secrets.toml")
        print("="*60)
        
        # Salvar em arquivo .env automaticamente
        try:
            with open('.env', 'a') as f:
                f.write(f"\n# Configura√ß√µes do Dropbox (geradas em {os.path.basename(__file__)})\n")
                f.write(f"DROPBOX_APP_KEY={APP_KEY}\n")
                f.write(f"DROPBOX_APP_SECRET={APP_SECRET}\n")
                f.write(f"DROPBOX_ACCESS_TOKEN={oauth_result.access_token}\n")
                f.write(f"DROPBOX_REFRESH_TOKEN={oauth_result.refresh_token}\n")
            
            print("‚úÖ Configura√ß√µes salvas automaticamente no arquivo .env")
            
        except Exception as e:
            print(f"‚ö†Ô∏è  N√£o foi poss√≠vel salvar automaticamente: {e}")
            print("   Por favor, adicione manualmente as vari√°veis acima")
        
        # Testar conex√£o
        print("\nüß™ Testando conex√£o...")
        try:
            dbx = dropbox.Dropbox(oauth_result.access_token)
            account = dbx.users_get_current_account()
            print(f"‚úÖ Conectado com sucesso como: {account.name.display_name}")
            print(f"üìß Email: {account.email}")
            
            # Criar pasta de backups se n√£o existir
            try:
                dbx.files_create_folder_v2("/backups")
                print("üìÅ Pasta /backups criada no Dropbox")
            except dropbox.exceptions.ApiError as e:
                if e.error.is_path() and e.error.get_path().is_conflict():
                    print("üìÅ Pasta /backups j√° existe no Dropbox")
                else:
                    print(f"‚ö†Ô∏è  N√£o foi poss√≠vel criar pasta /backups: {e}")
            
        except Exception as e:
            print(f"‚ùå Erro ao testar conex√£o: {e}")
            return
        
        print("\nüéâ Configura√ß√£o conclu√≠da! Agora voc√™ pode usar o backup no Dropbox.")
        
    except Exception as e:
        print(f"‚ùå Erro durante configura√ß√£o: {e}")
        return

if __name__ == "__main__":
    print("üîß CONFIGURA√á√ÉO INICIAL DO DROPBOX")
    print("="*40)
    print("Este script ir√° configurar o acesso ao Dropbox para backup autom√°tico.")
    print("")
    print("üìã Voc√™ precisar√° de:")
    print("   ‚Ä¢ App Key do Dropbox")
    print("   ‚Ä¢ App Secret do Dropbox")
    print("   ‚Ä¢ Acesso ao navegador para autoriza√ß√£o")
    print("")
    
    continuar = input("Deseja continuar? (s/N): ").strip().lower()
    if continuar in ['s', 'sim', 'y', 'yes']:
        setup_dropbox()
    else:
        print("‚ùå Configura√ß√£o cancelada.")
